<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdou.mapper.SeatMapper">
    <resultMap id="BaseResultMap" type="com.gdou.domain.Seat">
        <id column="seatid" jdbcType="INTEGER" property="seatid"/>
        <result column="trainid" jdbcType="INTEGER" property="trainid"/>
        <result column="seattype" jdbcType="VARCHAR" property="seattype"/>
        <result column="carriage" jdbcType="INTEGER" property="carriage"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="seatlocation" jdbcType="VARCHAR" property="seatlocation"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    seatid, trainid, seattype, carriage, status, seatlocation
  </sql>
    <select id="selectByExample" parameterType="com.gdou.domain.SeatExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ts_seat
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ts_seat
        where seatid = #{seatid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ts_seat
    where seatid = #{seatid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.gdou.domain.SeatExample">
        delete from ts_seat
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.gdou.domain.Seat">
    insert into ts_seat (seatid, trainid, seattype, 
      carriage, status, seatlocation
      )
    values (#{seatid,jdbcType=INTEGER}, #{trainid,jdbcType=INTEGER}, #{seattype,jdbcType=VARCHAR}, 
      #{carriage,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{seatlocation,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.gdou.domain.Seat">
        insert into ts_seat
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="seatid != null">
                seatid,
            </if>
            <if test="trainid != null">
                trainid,
            </if>
            <if test="seattype != null">
                seattype,
            </if>
            <if test="carriage != null">
                carriage,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="seatlocation != null">
                seatlocation,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="seatid != null">
                #{seatid,jdbcType=INTEGER},
            </if>
            <if test="trainid != null">
                #{trainid,jdbcType=INTEGER},
            </if>
            <if test="seattype != null">
                #{seattype,jdbcType=VARCHAR},
            </if>
            <if test="carriage != null">
                #{carriage,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="seatlocation != null">
                #{seatlocation,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.gdou.domain.SeatExample" resultType="java.lang.Long">
        select count(*) from ts_seat
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update ts_seat
        <set>
            <if test="record.seatid != null">
                seatid = #{record.seatid,jdbcType=INTEGER},
            </if>
            <if test="record.trainid != null">
                trainid = #{record.trainid,jdbcType=INTEGER},
            </if>
            <if test="record.seattype != null">
                seattype = #{record.seattype,jdbcType=VARCHAR},
            </if>
            <if test="record.carriage != null">
                carriage = #{record.carriage,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.seatlocation != null">
                seatlocation = #{record.seatlocation,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update ts_seat
        set seatid = #{record.seatid,jdbcType=INTEGER},
        trainid = #{record.trainid,jdbcType=INTEGER},
        seattype = #{record.seattype,jdbcType=VARCHAR},
        carriage = #{record.carriage,jdbcType=INTEGER},
        status = #{record.status,jdbcType=INTEGER},
        seatlocation = #{record.seatlocation,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.gdou.domain.Seat">
        update ts_seat
        <set>
            <if test="trainid != null">
                trainid = #{trainid,jdbcType=INTEGER},
            </if>
            <if test="seattype != null">
                seattype = #{seattype,jdbcType=VARCHAR},
            </if>
            <if test="carriage != null">
                carriage = #{carriage,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="seatlocation != null">
                seatlocation = #{seatlocation,jdbcType=VARCHAR},
            </if>
        </set>
        where seatid = #{seatid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.gdou.domain.Seat">
    update ts_seat
    set trainid = #{trainid,jdbcType=INTEGER},
      seattype = #{seattype,jdbcType=VARCHAR},
      carriage = #{carriage,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      seatlocation = #{seatlocation,jdbcType=VARCHAR}
    where seatid = #{seatid,jdbcType=INTEGER}
  </update>

    <!--查询所有座位信息(包含所属列车)-->
    <select id="selectAllSeatInfo" resultType="com.gdou.domain.Seat">
    SELECT a.*,b.trainname
    FROM ts_seat a , ts_train b
    WHERE a.trainid = b.trainid LIMIT #{offset,jdbcType=INTEGER} , #{limit,jdbcType=INTEGER};
  </select>

    <!--搜索座位信息(包含所属列车)-->
    <select id="searchSeatInfo" resultType="com.gdou.domain.Seat">
    SELECT *
    FROM(   SELECT a.*,b.trainname
		    FROM ts_seat a , ts_train b
			WHERE a.trainid = b.trainid   ) AS ts_seat_train
    WHERE trainname LIKE #{value,jdbcType=VARCHAR} OR
          seattype LIKE #{value,jdbcType=VARCHAR} OR
          seatlocation LIKE #{value,jdbcType=VARCHAR};
  </select>
</mapper>