<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
       	http://www.springframework.org/schema/context/spring-context-4.2.xsd
       	http://www.springframework.org/schema/context
       	http://www.springframework.org/schema/context/spring-context-4.2.xsd
       	http://www.springframework.org/schema/tx
       	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       	http://mybatis.org/schema/mybatis-spring
       	http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--mybatis:scan 会将com.gdou.mapper包里的所有接口当做mapper配置，之后可以自动引入mapper类-->
    <mybatis:scan base-package="com.gdou.mapper"/>

    <!--Spring开启注解扫描-->
    <context:component-scan base-package="com.gdou">
        <!-- 不扫描controller-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--加载数据源数据-->
    <context:property-override location="classpath:db.properties"/>
    <!--配置c3p0数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"/>
    <!--配置mybatis整合Spring的bean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--自动扫描mybatis配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!--jdbc事物管理器配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--启用支持annotation注解方式事物管理-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="change*" propagation="REQUIRED"/>
            <tx:method name="reset*" propagation="REQUIRED"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="load*" read-only="true"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--配置AOP织入-->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.gdou.service.Impl.*ServiceImpl.*(..))"/>
    </aop:config>

    <!-- 导入shiro配置   -->
    <import resource="spring-shiro.xml"/>

    <!-- 定义文件上传解析器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设定默认编码 -->
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 设定文件上传的最大值为5MB，5*1024*1024 <property name="maxUploadSize" value="5242880"></property>-->

        <!-- 设定文件上传时写入内存的最大值，如果小于这个参数不会生成临时文件，默认为10240 -->
        <property name="maxInMemorySize" value="40960"/>
        <!-- 上传文件的临时路径 -->

        <!-- 延迟文件解析 -->
        <property name="resolveLazily" value="true"/>
    </bean>
</beans>